{
  "databases": [
    {
      "name": "SqlServerDb",
      "connectionString": "Driver={ODBC Driver 17 for SQL Server};Server=localhost;Database=MyApp;Trusted_Connection=yes;"
    },
    {
      "name": "MySqlDb",
      "connectionString": "Driver={MySQL ODBC 8.0 Unicode Driver};Server=localhost;Database=inventory;Uid=app_user;Pwd=secure_password;"
    },
    {
      "name": "PostgresDb",
      "connectionString": "Driver={PostgreSQL Unicode};Server=localhost;Database=analytics;Uid=postgres;Pwd=pg_password;"
    },
    {
      "name": "OracleDb",
      "connectionString": "Driver={Oracle in XE};Server=localhost:1521/XE;Uid=hr;Pwd=oracle_pass;"
    },
    {
      "name": "SqliteDb",
      "connectionString": "Driver={SQLite3 ODBC Driver};Database=./data/app.db;"
    }
  ],
  "endpoints": [
    {
      "name": "SimpleEndpoint",
      "method": "POST",
      "url": "https://webhook.site/your-unique-url"
    },
    {
      "name": "ComprehensiveWebhook",
      "method": "POST",
      "url": "https://api.example.com/webhooks/data",
      "retryAttempts": 5,
      "retryStrategy": "ExponentialBackoff",
      "backOffSeconds": 10,
      "sendRequestIfNoResults": true,
      "payloadSize": 100,
      "requestDelay": 1000,
      "headers": [
        {
          "name": "Authorization",
          "value": "Bearer {Env:API_TOKEN}"
        },
        {
          "name": "Content-Type",
          "value": "application/json"
        },
        {
          "name": "X-Source",
          "value": "QueryPush"
        }
      ]
    }
  ],
  "alerts": {
    "slack": {
      "default": true,
      "webhookUrl": "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK",
      "channel": "#alerts",
      "username": "QueryPush",
      "alertCooldownMinutes": 60
    },
    "email": {
      "smtpHost": "smtp.gmail.com",
      "smtpPort": 587,
      "useSsl": true,
      "from": "alerts@yourcompany.com",
      "to": "admin@yourcompany.com",
      "username": "alerts@yourcompany.com",
      "password": "your-app-password-here",
      "alertCooldownMinutes": 60
    }
  },
  "logging": {
    "rotationStrategy": "Daily",
    "retentionDays": 30,
    "logDirectory": "logs"
  },
  "queries": [
    {
      "name": "Inventory Check",
      "cron": "0 */15 * * * ?",
      "runOnStartup": true,
      "database": "MySqlDb",
      "endpoint": "SimpleEndpoint",
      "enabled": true,
      "payloadFormat": "JsonLines",
      "onFailure": "EmailAlert",
      "queryText": "SELECT ProductId, ProductName, StockLevel, ReorderLevel FROM Products WHERE StockLevel < ReorderLevel AND IsActive = 1"
    },
    {
      "name": "Daily User Analytics",
      "cron": "0 0 6 * * ?",
      "runOnStartup": false,
      "database": "SqlServerDb",
      "endpoint": "ComprehensiveWebhook",
      "enabled": true,
      "timeoutSeconds": 120,
      "maxRows": 5000,
      "payloadFormat": "JsonArray",
      "onFailure": "SlackAlert",
      "queryText": "SELECT u.UserId, u.Email, u.CreatedDate, COUNT(l.LoginId) as LoginCount FROM Users u LEFT JOIN LoginHistory l ON u.UserId = l.UserId WHERE u.CreatedDate >= '{DateNow|-1:00:00|yyyy-MM-dd}' GROUP BY u.UserId, u.Email, u.CreatedDate ORDER BY u.CreatedDate DESC"
    }
  ]
}
